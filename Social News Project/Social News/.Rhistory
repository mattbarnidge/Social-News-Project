theme(legend.title = element_blank()) +
scale_colour_grey(labels = c("Closeness",
"Liking",
"Perceived Similarity",
"Social Trust",
"Community Belongingness",
"Social Connectedness"),
start = 0.2,
end = 0.8,
aesthetics = "colour") +
xlab("Effect Size")
with(x, cor(cce, engage, use="complete.obs")) #weak negative correlation
with(long, cor(cce, engage.x, use="complete.obs")) #moderate negative correlation
aggregate(long$engage.x, by=list(long$agr), mean)
fit = aov(engage.x ~ as.factor(agr), data=long)
summary(fit)
TukeyHSD(fit)
ggplot(long, aes(as.factor(agr), engage.x)) +
geom_boxplot()
p5 <- ggplot(long, aes(as.factor(agr), engage.x)) +
geom_boxplot()
p5 + coord_flip()
p5 <- ggplot(long, aes(as.factor(agr), engage.x)) +
geom_boxplot(notch=TRUE)
p5 + coord_flip()
p5 + stat_summary(fun.y=mean, geom="point", shape=18, size=4)
p5 + stat_summary(fun.y=mean, geom="point", shape=10, size=4)
p5 + stat_summary(fun.y=mean, geom="point", shape=2, size=4)
p5 + stat_summary(fun.y=mean, geom="point", shape=12, size=4)
p5 + stat_summary(fun.y=mean, geom="point", shape=23, size=4)
summary(long$engage.x)
p5 <- ggplot(long, aes(as.factor(agr), engage.x), color=agr) +
geom_boxplot(notch=TRUE)
p5 + coord_flip()
p5 + stat_summary(fun.y=mean, geom="point", shape=23, size=4)
p5 <- ggplot(long, aes(as.factor(agr), engage.x), color=as.factor(agr)) +
geom_boxplot(notch=TRUE)
p5 + coord_flip()
p5 + stat_summary(fun.y=mean, geom="point", shape=23, size=4)
p5 <- ggplot(long, aes(as.factor(agr), engage.x)) +
geom_boxplot(notch=TRUE)
p5 + coord_flip()
p5 + stat_summary(fun.y=mean, geom="point", shape=23, size=4)
p5 + scale_color_grey()
p5 <- ggplot(long, aes(as.factor(agr), engage.x)) +
geom_boxplot(notch=TRUE)
p5 + coord_flip()
p5 + stat_summary(fun.y=mean, geom="point", shape=23, size=4)
p5 <- ggplot(long, aes(as.factor(agr), engage.x)) +
geom_boxplot(notch=TRUE, fill='#A4A4A4', color="black")
p5 + coord_flip()
p5 + stat_summary(fun.y=mean, geom="point", shape=23, size=4)
long$agr <- as.factor(long$agr)
levels(long$agr)
long$agr <- factor(long$agr, levels = c("CCE", "NEU", "LME"))
levels(long$agr)
aggregate(long$engage.x, by=list(long$agr), mean)
#Load Data and Libraries
setwd("~/Documents/GitHub/Social-News-Project/Social News Project/Social News")
load("socnews.Rdata")
load("sub.Rdata")
load("long.Rdata")
library(lme4)
library(lmerTest)
library(ggplot2)
library(dotwhisker)
library(grid)
library(gridExtra)
library(sjPlot)
library(dplyr)
#Make CCE vars
x$cce <- x$fbnews.dis-x$fbnews.agr
long$cce <- abs(long$agree - 6) - 3
long$agr[long$agree > 3] <- 1
long$agr[long$agree == 3] <- 0
long$agr[long$agree < 3] <- -1
#RQ1: How much CCE in news?
summary(x$cce); sd(x$cce, na.rm=T)
summary(long$cce); sd(long$cce, na.rm=T)
table(long$agr)
t.test(x$cce, mu=0)
t.test(long$cce, mu=0)
prop.test(634, 998)
#Visualization
p1 <- ggplot(x, aes(x = cce)) +
geom_histogram(aes(y = ..density..),
colour = 1, fill = "white", bins = 5) +
geom_density(adjust=5) +
ylim(0,.5) +
xlab("General Measure") +
ylab("Density")
p1 + geom_vline(aes(xintercept=mean(cce)),
color="black", linetype="dashed", size=.5)
p2 <- ggplot(long, aes(x = cce)) +
geom_histogram(aes(y = ..density..),
colour = 1, fill = "white", bins = 5) +
geom_density(adjust=5) +
ylim(0,.5) +
xlab("Name Generator Measure") +
ylab("")
p2 + geom_vline(aes(xintercept=mean(cce, na.rm=TRUE)),
color="black", linetype="dashed", size=.5)
grid.arrange(p1,p2, ncol=2, nrow=1,
top=textGrob("Density Histograms of Cross-Cutting Exposure Measures"))
#Second visualization
df <- data.frame(x = c("LME", "NEU", "CCE"), y = c(319, 161, 634), sd=c(17.86057, 12.68858, 25.17936))
df$x <- factor(df$x, levels = c("LME", "NEU", "CCE"))
p3 <- ggplot(data=df, aes(x=x, y=y)) +
geom_bar(stat="identity", width=.5) +
geom_errorbar(aes(ymin=y-sd,
ymax=y+sd),
width=.2) +
xlab("Exposure Type") +
ylab("No. of Cases")
p3 + coord_flip()
geom_errorbar(aes(ymin=value-standard_error,
ymax=value+standard_error),
width=.2)
#RQ2: Relationship with Y
m1 = lm(soccon ~ age + gender + poc + edu + inc + fb.freq + netsize + netdiv2 + cce, data=x)
m2 = lm(combel ~ age + gender + poc + edu + inc + fb.freq + netsize + netdiv2 + cce, data=x)
m3 = lm(soctrust ~ age + gender + poc + edu + inc + fb.freq + netsize + netdiv2 + cce, data=x)
m4 = lmer(sim ~ age + gender + poc + edu + inc + fb.freq + netsize + netdiv2 + cce + (1 | ID), data=long, control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
m5 = lmer(lik ~ age + gender + poc + edu + inc + fb.freq + netsize + netdiv2 + cce + (1 | ID), data=long, control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
m6 = lmer(clo ~ age + gender + poc + edu + inc + fb.freq + netsize + netdiv2 + cce + (1 | ID), data=long, control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
summary(m1)
summary(m2)
summary(m3)
summary(m4, cor=F)
summary(m5, cor=F)
summary(m6, cor=F)
#Visualizations
p4 <- dwplot(list(m1, m2, m3, m4, m5, m6),
show_intercept = TRUE,
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2),
vars_order = c("age", "gender", "poc", "edu", "inc",
"fb.freq", "netsize", "netdiv2",
"cce",
"SD (Intercept)"),
model_order = c("Model 1", "Model 2", "Model 3",
"Model 4", "Model 5", "Model 6")
) %>%
relabel_predictors(
c(age = "Age", gender = "Gender", poc = "Race", edu = "Education", inc = "Income",
fb.freq = "Facebook Frequency", netsize = "Network Size", netdiv2 = "Network Diversity",
cce = "Cross-Cutting Exposure")
)
p4 + labs(x = "Effect Size", colour = "Model")
p4 + theme_light() +
theme(legend.title = element_blank()) +
scale_colour_grey(labels = c("Closeness",
"Liking",
"Perceived Similarity",
"Social Trust",
"Community Belongingness",
"Social Connectedness"),
start = 0.2,
end = 0.8,
aesthetics = "colour") +
xlab("Effect Size")
#RQ3: Relationship with engagement?
with(x, cor(cce, engage, use="complete.obs")) #weak negative correlation
with(long, cor(cce, engage.x, use="complete.obs")) #moderate negative correlation
aggregate(long$engage.x, by=list(long$agr), mean)
fit = aov(engage.x ~ as.factor(agr), data=long)
summary(fit)
TukeyHSD(fit)
long$agr <- as.factor(long$agr)
long$agr <- factor(long$agr, levels = c("CCE", "NEU", "LME"))
p5 <- ggplot(long, aes(agr, engage.x)) +
geom_boxplot(notch=TRUE, fill='#A4A4A4', color="black") +
labs(x="Engagement", y = "Exposure Type")
p5 + coord_flip()
p5 + stat_summary(fun.y=mean, geom="point", shape=23, size=4)
levels(long$agr)
p5 <- ggplot(long, aes(as.factor(agr), engage.x)) +
geom_boxplot(notch=TRUE, fill='#A4A4A4', color="black") +
labs(x="Engagement", y = "Exposure Type")
p5
#Load Data and Libraries
setwd("~/Documents/GitHub/Social-News-Project/Social News Project/Social News")
load("socnews.Rdata")
load("sub.Rdata")
load("long.Rdata")
library(lme4)
library(lmerTest)
library(ggplot2)
library(dotwhisker)
library(grid)
library(gridExtra)
library(sjPlot)
library(dplyr)
#Make CCE vars
x$cce <- x$fbnews.dis-x$fbnews.agr
long$cce <- abs(long$agree - 6) - 3
long$agr[long$agree > 3] <- 1
long$agr[long$agree == 3] <- 0
long$agr[long$agree < 3] <- -1
#RQ1: How much CCE in news?
summary(x$cce); sd(x$cce, na.rm=T)
summary(long$cce); sd(long$cce, na.rm=T)
table(long$agr)
t.test(x$cce, mu=0)
t.test(long$cce, mu=0)
prop.test(634, 998)
#Visualization
p1 <- ggplot(x, aes(x = cce)) +
geom_histogram(aes(y = ..density..),
colour = 1, fill = "white", bins = 5) +
geom_density(adjust=5) +
ylim(0,.5) +
xlab("General Measure") +
ylab("Density")
p1 + geom_vline(aes(xintercept=mean(cce)),
color="black", linetype="dashed", size=.5)
p2 <- ggplot(long, aes(x = cce)) +
geom_histogram(aes(y = ..density..),
colour = 1, fill = "white", bins = 5) +
geom_density(adjust=5) +
ylim(0,.5) +
xlab("Name Generator Measure") +
ylab("")
p2 + geom_vline(aes(xintercept=mean(cce, na.rm=TRUE)),
color="black", linetype="dashed", size=.5)
grid.arrange(p1,p2, ncol=2, nrow=1,
top=textGrob("Density Histograms of Cross-Cutting Exposure Measures"))
#Second visualization
df <- data.frame(x = c("LME", "NEU", "CCE"), y = c(319, 161, 634), sd=c(17.86057, 12.68858, 25.17936))
df$x <- factor(df$x, levels = c("LME", "NEU", "CCE"))
p3 <- ggplot(data=df, aes(x=x, y=y)) +
geom_bar(stat="identity", width=.5) +
geom_errorbar(aes(ymin=y-sd,
ymax=y+sd),
width=.2) +
xlab("Exposure Type") +
ylab("No. of Cases")
p3 + coord_flip()
geom_errorbar(aes(ymin=value-standard_error,
ymax=value+standard_error),
width=.2)
#RQ2: Relationship with Y
m1 = lm(soccon ~ age + gender + poc + edu + inc + fb.freq + netsize + netdiv2 + cce, data=x)
m2 = lm(combel ~ age + gender + poc + edu + inc + fb.freq + netsize + netdiv2 + cce, data=x)
m3 = lm(soctrust ~ age + gender + poc + edu + inc + fb.freq + netsize + netdiv2 + cce, data=x)
m4 = lmer(sim ~ age + gender + poc + edu + inc + fb.freq + netsize + netdiv2 + cce + (1 | ID), data=long, control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
m5 = lmer(lik ~ age + gender + poc + edu + inc + fb.freq + netsize + netdiv2 + cce + (1 | ID), data=long, control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
m6 = lmer(clo ~ age + gender + poc + edu + inc + fb.freq + netsize + netdiv2 + cce + (1 | ID), data=long, control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
summary(m1)
summary(m2)
summary(m3)
summary(m4, cor=F)
summary(m5, cor=F)
summary(m6, cor=F)
#Visualizations
p4 <- dwplot(list(m1, m2, m3, m4, m5, m6),
show_intercept = TRUE,
vline = geom_vline(
xintercept = 0,
colour = "grey60",
linetype = 2),
vars_order = c("age", "gender", "poc", "edu", "inc",
"fb.freq", "netsize", "netdiv2",
"cce",
"SD (Intercept)"),
model_order = c("Model 1", "Model 2", "Model 3",
"Model 4", "Model 5", "Model 6")
) %>%
relabel_predictors(
c(age = "Age", gender = "Gender", poc = "Race", edu = "Education", inc = "Income",
fb.freq = "Facebook Frequency", netsize = "Network Size", netdiv2 = "Network Diversity",
cce = "Cross-Cutting Exposure")
)
p4 + labs(x = "Effect Size", colour = "Model")
p4 + theme_light() +
theme(legend.title = element_blank()) +
scale_colour_grey(labels = c("Closeness",
"Liking",
"Perceived Similarity",
"Social Trust",
"Community Belongingness",
"Social Connectedness"),
start = 0.2,
end = 0.8,
aesthetics = "colour") +
xlab("Effect Size")
#RQ3: Relationship with engagement?
with(x, cor(cce, engage, use="complete.obs")) #weak negative correlation
with(long, cor(cce, engage.x, use="complete.obs")) #moderate negative correlation
aggregate(long$engage.x, by=list(long$agr), mean)
fit = aov(engage.x ~ as.factor(agr), data=long)
summary(fit)
TukeyHSD(fit)
#Visualization
p5 <- ggplot(long, aes(as.factor(agr), engage.x)) +
geom_boxplot(notch=TRUE, fill='#A4A4A4', color="black") +
labs(x="Engagement", y = "Exposure Type")
p5 + coord_flip()
p5 + stat_summary(fun.y=mean, geom="point", shape=23, size=4)
p5 + coord_flip()
p5 + stat_summary(fun.y=mean, geom="point", shape=23, size=4)
p5 <- ggplot(long, aes(as.factor(agr), engage.x)) +
geom_boxplot(notch=TRUE, fill='#A4A4A4', color="black") +
labs(x="Exposure Type", y = "Engagement")
p5 + coord_flip()
p5 + stat_summary(fun.y=mean, geom="point", shape=23, size=4)
rm(p5)
p5 <- ggplot(long, aes(as.factor(agr), engage.x)) +
geom_boxplot(notch=TRUE, fill='#A4A4A4', color="black")
p5
p5 + coord_flip()
p5 + stat_summary(fun.y=mean, geom="point", shape=23, size=4)
df2 <- data.frame(x=as.factor(agr), y=engage.x)
df2 <- data.frame(x=as.factor(long$agr), y=long$engage.x)
df2 <- na.omit(df2)
class(df2$agr)
names(df2)
class(df2$x)
levels(df2$x)
df2$x <- factor(df$x, levels = c("CCE", "NEU", "LME"))
df2$x <- factor(df2$x, levels = c("CCE", "NEU", "LME"))
levels(df2$x)
p5 <- ggplot(df2, aes(x, y)) +
geom_boxplot(notch=TRUE, fill='#A4A4A4', color="black") +
labs(x="Exposure Type", y = "Engagement")
p5
p5 <- ggplot(df2, aes(as.factor(x), y)) + geom_boxplot()
p5
p5 <- ggplot(df2, aes(y,x) + geom_boxplot()
p5
p5 <- ggplot(long, aes(as.factor(agr), engage.x)) +
geom_boxplot(notch=TRUE, fill='#A4A4A4', color="black") +
labs(x="Exposure Type", y = "Engagement")
p5 + coord_flip()
p5 + stat_summary(fun.y=mean, geom="point", shape=23, size=4)
ggplot(data=subset(long, !is.na(agr)),
aes(as.factor(agr), engage.x)) +
geom_boxplot(notch=TRUE, fill='#A4A4A4', color="black") +
labs(x="Exposure Type", y = "Engagement")
p5 <- ggplot(data=subset(long, !is.na(agr)),
aes(as.factor(agr), engage.x)) +
geom_boxplot(notch=TRUE, fill='#A4A4A4', color="black") +
labs(x="Exposure Type", y = "Engagement")
p5 + coord_flip()
p5 + stat_summary(fun.y=mean, geom="point", shape=23, size=4)
p5 <- ggplot(data=subset(long, !is.na(agr)),
aes(as.factor(agr), engage.x)) +
geom_boxplot(notch=TRUE, fill='#A4A4A4', color="black") +
labs(x="Exposure Type", y = "Engagement")
p5 + coord_flip()
p5 + stat_summary(fun=mean, geom="point", shape=23, size=4)
p5 <- ggplot(data=subset(long, !is.na(agr)),
aes(as.factor(agr, levels=c("CCE", "NEU", "LME")), engage.x)) +
geom_boxplot(notch=TRUE, fill='#A4A4A4', color="black") +
labs(x="Exposure Type", y = "Engagement")
p5 + coord_flip()
p5 + stat_summary(fun=mean, geom="point", shape=23, size=4)
rm(p5)
p5 <- ggplot(data=subset(long, !is.na(agr)),
aes(factor(agr, levels=c("CCE", "NEU", "LME")), engage.x)) +
geom_boxplot(notch=TRUE, fill='#A4A4A4', color="black") +
labs(x="Exposure Type", y = "Engagement")
p5 + coord_flip()
p5 + stat_summary(fun=mean, geom="point", shape=23, size=4)
p5 <- ggplot(data=subset(long, !is.na(agr)),
aes(as.factor(agr), engage.x)) +
geom_boxplot(notch=TRUE, fill='#A4A4A4', color="black") +
labs(x="Exposure Type", y = "Engagement")
p5 + coord_flip()
p5 + stat_summary(fun=mean, geom="point", shape=23, size=4)
p5 <- ggplot(data=subset(long, !is.na(agr)),
aes(as.factor(agr), engage.x)) +
geom_boxplot(notch=TRUE, fill='#A4A4A4', color="black") +
labs(x="Exposure Type", y = "Engagement") +
scale_x_discrete(labels = c('CCE','NEU','LME'))
p5 + coord_flip()
p5 + stat_summary(fun=mean, geom="point", shape=23, size=4)
i1 = lm(soccon ~ age + gender + poc + edu + inc + fb.freq + netsize + netdiv2 + cce*engage, data=x)
i2 = lm(combel ~ age + gender + poc + edu + inc + fb.freq + netsize + netdiv2 + cce*engage, data=x)
i3 = lm(soctrust ~ age + gender + poc + edu + inc + fb.freq + netsize + netdiv2 + cce*engage, data=x)
i4 = lmer(sim ~ age + gender + poc + edu + inc + fb.freq + netsize + netdiv2 + cce*engage.x + (1 | ID), data=long, control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
i5 = lmer(lik ~ age + gender + poc + edu + inc + fb.freq + netsize + netdiv2 + cce*engage.x + (1 | ID), data=long, control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
i6 = lmer(clo ~ age + gender + poc + edu + inc + fb.freq + netsize + netdiv2 + cce*engage.x + (1 | ID), data=long, control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
vissreg::visreg(i3, "cce", by="engage")
vissreg::visreg(i3, "cce", by="engage")
visreg::visreg(i3, "cce", by="engage")
x$engage <- cut(x$engage, 3, labels=c("Low", "Med", "High"))
visreg::visreg(i3, "cce", by="engage",
jitter=TRUE, line=list(col="black"))
i3.f = lm(soctrust ~ age + gender + poc + edu + inc + fb.freq + netsize + netdiv2 + cce*engage, data=x)
visreg::visreg(i3.f, "cce", by="engage", jitter=TRUE, line=list(col="black"))
visreg::visreg(i3.f, "cce", by="engage", jitter=TRUE, line=list(col="black"),
xlab="Cross-Cutting Exposure", ylab="Social Trust")
long$engage.x <- cut(long$engage.x, 3, labels=c("Low", "Med", "High"))
i4.f = lmer(sim ~ age + gender + poc + edu + inc + fb.freq + netsize + netdiv2 + cce*engage.x + (1 | ID), data=long, control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=2e5)))
visreg::visreg(i4.f, "cce", by="engage.x", jitter=TRUE, line=list(col="black"),
xlab="Cross-Cutting Exposure", ylab="Perceived Similarity")
summary(i4, cor=F)
summary(i3)
summary(i6, cor=F)
summary(i5, cor=F)
summary(i2)
summary(i1)
#Load Data and Libraries
setwd("~/Documents/GitHub/Social-News-Project/Social News Project/Social News")
load("socnews.Rdata")
load("sub.Rdata")
load("long.Rdata")
mean(x$cce, na.rm=TRUE); sd(x$cce, na.rm=TRUE)
#Make CCE vars
x$cce <- x$fbnews.dis-x$fbnews.agr
long$cce <- abs(long$agree - 6) - 3
long$agr[long$agree > 3] <- 1
long$agr[long$agree == 3] <- 0
long$agr[long$agree < 3] <- -1
mean(x$cce, na.rm=TRUE); sd(x$cce, na.rm=TRUE)
mean(long$cce, na.rm=TRUE); sd(long$cce, na.rm=TRUE)
table(long$agr)
summary(x$cce)
summary(long$cce)
mean(long$sim, na.rm=TRUE); sd(long$sim, na.rm=TRUE)
mean(long$lik, na.rm=TRUE); sd(long$lik, na.rm=TRUE)
mean(long$clo, na.rm=TRUE); sd(long$clo, na.rm=TRUE)
mean(x$soccon, na.rm=TRUE); sd(x$soccon, na.rm=TRUE)
mean(x$combel, na.rm=TRUE); sd(x$combel, na.rm=TRUE)
mean(x$soctrust, na.rm=TRUE); sd(x$soctrust, na.rm=TRUE)
summary(d$B10_1)
summary(x$age)
summary(x$gender)
summary(x$poc)
summary(x$edu)
summary(x$inc)
summary(x$fb.freq)
summary(x$netsize)
summary(x$netdiv2)
sd(x$netdiv2, na.rm=T)
sd(x$netsize, na.rm=T)
sd(x$fb.freq, na.rm=T)
sd(x$inc, na.rm=T)
sd(x$edu, na.rm=T)
sd(x$age, na.rm=T)
summary(long$lik)
summary(x$engage); sd(x$engage, na.rm=T)
summary(long$engage.x); sd(long$engage.x, na.rm=T)
#Load Data and Libraries
setwd("~/Documents/GitHub/Social-News-Project/Social News Project/Social News")
load("socnews.Rdata")
load("sub.Rdata")
load("long.Rdata")
#Load Data and Libraries
setwd("~/Documents/GitHub/Social-News-Project/Social News Project/Social News")
load("socnews.Rdata")
load("sub.Rdata")
load("long.Rdata")
library(lme4)
library(lmerTest)
library(ggplot2)
library(dotwhisker)
library(grid)
library(gridExtra)
library(sjPlot)
library(dplyr)
#Make CCE vars
x$cce <- x$fbnews.dis-x$fbnews.agr
long$cce <- abs(long$agree - 6) - 3
long$agr[long$agree > 3] <- 1
long$agr[long$agree == 3] <- 0
long$agr[long$agree < 3] <- -1
#RQ1: How much CCE in news?
summary(x$cce); sd(x$cce, na.rm=T)
summary(long$cce); sd(long$cce, na.rm=T)
table(long$agr)
t.test(x$cce, mu=0)
t.test(long$cce, mu=0)
prop.test(634, 998)
p1 <- ggplot(x, aes(x = cce)) +
geom_histogram(aes(y = ..density..),
colour = 1, fill = "white", bins = 5) +
geom_density(adjust=5) +
ylim(0,.5) +
xlab("General Measure") +
ylab("Density") +
geom_vline(aes(xintercept=mean(cce)),
color="black", linetype="dashed", size=.5)
p1
p2 <- ggplot(long, aes(x = cce)) +
geom_histogram(aes(y = ..density..),
colour = 1, fill = "white", bins = 5) +
geom_density(adjust=5) +
ylim(0,.5) +
xlab("Name Generator Measure") +
ylab("") +
geom_vline(aes(xintercept=mean(cce, na.rm=TRUE)),
color="black", linetype="dashed", size=.5)
p2
grid.arrange(p1,p2, ncol=2, nrow=1,
top=textGrob("Density Histograms of Cross-Cutting Exposure Measures"))
df <- data.frame(x = c("CCE", "NEU", "LME"), y = c(319, 161, 634), sd=c(17.86057, 12.68858, 25.17936))
df$x <- factor(df$x, levels = c("CCE", "NEU", "LME"))
p3 <- ggplot(data=df, aes(x=x, y=y)) +
geom_bar(stat="identity", width=.5) +
geom_errorbar(aes(ymin=y-sd,
ymax=y+sd),
width=.2) +
xlab("Exposure Type") +
ylab("No. of Cases")
p3 + coord_flip()
geom_errorbar(aes(ymin=value-standard_error,
ymax=value+standard_error),
width=.2)
