d$ng.agree = rowMeans(cbind(d[,83], d[,97], d[,111]), na.rm=TRUE)
d$ng.agree[d$filt!=1] <- NA
#Similarity
d <- d %>% mutate(across(
.cols = all_of(c(84,98,112)),
~(recode(., "None at all" = 1, "A little" = 2, "A moderate amount" = 3, "A lot" = 4, "A great deal" = 5, .default = NA_real_)),
.names = "{col}"))
d$ng1.sim = d$C19
d$ng1.sim[d$filt!=1] <- NA
d$ng2.sim = d$C26
d$ng2.sim[d$filt!=1] <- NA
d$ng3.sim = d$C33
d$ng3.sim[d$filt!=1] <- NA
ltm::cronbach.alpha(cbind(d[,84], d[,98], d[,112]), na.rm=TRUE) #alpha = .802
d$ng.sim = rowMeans(cbind(d[,84], d[,98], d[,112]), na.rm=TRUE)
d$ng.sim[d$filt!=1] <- NA
#Liking
d <- d %>% mutate(across(
.cols = all_of(c(85,99,113)),
~(recode(., "Dislike a great deal" = 1, "Dislike somewhat" = 2, "Neither like nor dislike" = 3, "Like somewhat" = 4, "Like a great deal" = 5, .default = NA_real_)),
.names = "{col}"))
d$ng1.lik = d$C20
d$ng1.lik[d$filt!=1] <- NA
d$ng2.lik = d$C27
d$ng2.lik[d$filt!=1] <- NA
d$ng3.lik = d$C34
d$ng3.lik[d$filt!=1] <- NA
ltm::cronbach.alpha(cbind(d[,85], d[,99], d[,113]), na.rm=TRUE) #alpha = .737
d$ng.lik = rowMeans(cbind(d[,85], d[,99], d[,113]), na.rm=TRUE)
d$ng.lik[d$filt!=1] <- NA
#Closeness
d <- d %>% mutate(across(
.cols = all_of(c(86,100,114)),
~(recode(., "A" = 1, "B" = 2, "C" = 3, "D" = 4, "E" = 5, "F" = 6, "G" = 7, .default = NA_real_)),
.names = "{col}"))
d$ng1.clo = d$C21
d$ng1.clo[d$filt!=1] <- NA
d$ng2.clo = d$C28
d$ng2.clo[d$filt!=1] <- NA
d$ng3.clo = d$C35
d$ng3.clo[d$filt!=1] <- NA
ltm::cronbach.alpha(cbind(d[,86], d[,100], d[,114]), na.rm=TRUE) #alpha = .792
d$ng.clo = rowMeans(cbind(d[,86], d[,100], d[,114]), na.rm=TRUE)
d$ng.clo[d$filt!=1] <- NA
#Correlations
with(d, cor(cbind(ng.fam, ng.fri, ng.cow, ng.acq, ng.nei),
use="complete.obs", method="pearson"))
with(d, cor(cbind(ng.engage, ng.agree, ng.sim, ng.lik, ng.clo),
use="complete.obs", method="pearson"))
#Section D: Social Networks
#Network Size
d <- d %>% mutate(D36 = recode(D36, "None" = 1, "50 or fewer" = 2, "Between 51 and 150" = 3, "Between 151 and 500" = 4, "Between 501 and 1,000" = 5, "Between 1,001 and 2,000" = 6, "More than 2,000" = 7, .default = NA_real_))
d$netsize = d$D36
#News Network Size
d <- d %>% mutate(D37 = recode(D37, "None" = 1, "5 or fewer" = 2, "Between 6 and 10" = 3, "Between 11 and 25" = 4, "Between 26 and 50" = 5, "Between 51 and 100" = 6, "More than 100" = 7, .default = NA_real_))
d$newssize = d$D37
#Network Diversity Ties
d <- d %>% mutate(across(
.cols = all_of(c(118:125)),
~(recode(., "None" = 1, "A few" = 2, "A lot" = 3, "Many" = 4, "Most" = 5, .default = NA_real_)),
.names = "{col}"))
ltm::cronbach.alpha(d[,118:125], na.rm=TRUE) #alpha = .886
d$netdiv1 = rowMeans(d[,118:125], na.rm=TRUE)
#Network Diversity Occupation
d <- d %>% mutate(across(
.cols = all_of(c(126:147)),
~(recode(., "No" = 0, "Yes" = 1, .default = NA_real_)),
.names = "{col}"))
d$netdiv2 = rowSums(d[, 126:147], na.rm=TRUE)
#News Network Diversity
d <- d %>% mutate(across(
.cols = all_of(c(148:159)),
~(recode(., "None at all" = 1, "A little" = 2, "Some" = 3, "A lot" = 4, "A great deal" = 5, .default = NA_real_)),
.names = "{col}"))
ltm::cronbach.alpha(d[,148:159], na.rm=TRUE) #alpha = .887
d$netdiv3 = rowMeans(d[,148:159], na.rm=TRUE)
#Correlations
with(d, cor(cbind(netsize, newssize, netdiv1, netdiv2, netdiv3),
use="complete.obs", method="pearson"))
#Section E: News
#FB News
d <- d %>% mutate(E41 = recode(E41, "Never" = 1, "Several times a month" = 2, "Several times a week" = 3, "Once or twice a day" = 4, "Several times a day" = 5, .default = NA_real_))
d$fbnews = d$E41
#FB News Agree/Disagree
d <- d %>% mutate(across(
.cols = all_of(c(161:162)),
~(recode(., "Never" = 1, "Several times a month" = 2, "Several times a week" = 3, "Once or twice a day" = 4, "Several times a day" = 5, .default = NA_real_)),
.names = "{col}"))
d$fbnews.dis = d$E42_1
d$fbnews.agr = d$E42_2
#Follows for News
d <- d %>% mutate(across(
.cols = all_of(c(163:165)),
~(recode(., "Never" = 1, "Rarely" = 2, "Sometimes" = 3, "Often" = 4, "Very often" = 5, .default = NA_real_)),
.names = "{col}"))
ltm::cronbach.alpha(d[,163:165], na.rm=TRUE) #alpha = .910
d$follow = rowMeans(d[,163:165], na.rm=TRUE)
#Non-FB News
d <- d %>% mutate(across(
.cols = all_of(c(166:171)),
~(recode(., "Never" = 1, "Several times a month" = 2, "Several times a week" = 3, "Once or twice a day" = 4, "Several times a day" = 5, .default = NA_real_)),
.names = "{col}"))
d$olnews.msm = d$E44_1
d$olnews.olo = d$E44_2
d$npnews = d$E44_3
d$tvnews = d$E44_4
d$radnews = d$E44_5
d$appnews = d$E44_6
ltm::cronbach.alpha(d[,166:171], na.rm=TRUE) #alpha = .866
d$nfbnews = rowMeans(d[,166:171], na.rm=TRUE)
#Online News Engagement
d <- d %>% mutate(across(
.cols = all_of(c(172:175)),
~(recode(., "Never" = 1, "Several times a month" = 2, "Several times a week" = 3, "Once or twice a day" = 4, "Several times a day" = 5, .default = NA_real_)),
.names = "{col}"))
d$click = d$E45_1
d$scan = d$E45_2
d$read = d$E45_3
d$seek = d$E45_4
ltm::cronbach.alpha(d[,172:175], na.rm=TRUE) #alpha = .908
d$engage = rowMeans(d[,172:175], na.rm=TRUE)
#News Avoidance
d <- d %>% mutate(across(
.cols = all_of(c(176,178,179,180,182)),
~(recode(., "Strongly disagree" = 1, "Somewhat disagree" = 2, "Neither agree nor disagree" = 3, "Somewhat agree" = 4, "Strongly agree" = 5, .default = NA_real_)),
.names = "{col}"))
d <- d %>% mutate(across(
.cols = all_of(c(177,181)),
~(recode(., "Strongly disagree" = 5, "Somewhat disagree" = 4, "Neither agree nor disagree" = 3, "Somewhat agree" = 2, "Strongly agree" = 1, .default = NA_real_)),
.names = "{col}"))
cor(d[,177:178], use="complete.obs") #r = -.08
cor(d[,179:180], use="complete.obs") #r = .48
cor(d[,181:182], use="complete.obs") #r = -.20
d$avoid.single = d$E46_1
d$avoid.norms = d$E46_3
d$avoid.time = d$E46_4
d$avoid.emo = d$E46_5
d$avoid.soc = d$E46_7
ltm::cronbach.alpha(cbind(d[,176], d[,178:180], d[,182]), na.rm=TRUE) #alpha = .745
d$avoid = rowMeans(cbind(d[,176], d[,178:180], d[,182]), na.rm=TRUE)
#Unfriend
d <- d %>% mutate(across(
.cols = all_of(c(183:185)),
~(recode(., "Yes" = 1, "No" = 0, .default = NA_real_)),
.names = "{col}"))
ltm::cronbach.alpha(d[,183:185], na.rm=TRUE) #alpha = .799
d$unfriend = rowMeans(d[,183:185], na.rm=TRUE)
#Correlations
with(d, cor(cbind(fbnews, fbnews.agr, fbnews.dis, follow,
nfbnews, engage, avoid, unfriend),
use="complete.obs", method="pearson"))
#Section F: Talk
#Talk Frequency
d <- d %>% mutate(E48 = recode(E48, "Never" = 1, "Rarely" = 2, "Occassionally" = 3, "Frequently" = 4, "Very frequently" = 5, .default = NA_real_))
d$fbtalk.freq = d$E48
#Talk Network Size
d <- d %>% mutate(E49 = recode(E49, "None" = 1, "One or two" = 2, "Several" = 3, "Quite a few" = 4, "Many" = 5, .default = NA_real_))
d$fbtalk.size = d$E49
#FB Talk Agree/Disagree
d <- d %>% mutate(across(
.cols = all_of(c(188:189)),
~(recode(., "Never" = 1, "Rarely" = 2, "Occassionally" = 3, "Frequently" = 4, "Very frequently" = 5, .default = NA_real_)),
.names = "{col}"))
d$fbtalk.dis = d$E50_1
d$fbtalk.agr = d$E50_2
#FB Expression
d <- d %>% mutate(across(
.cols = all_of(c(190:195)),
~(recode(., "Never" = 1, "Rarely" = 2, "Occasionally" = 3, "Frequently" = 4, "Very frequently" = 5, .default = NA_real_)),
.names = "{col}"))
ltm::cronbach.alpha(d[,190:195], na.rm=TRUE) #alpha = .947
d$express = rowMeans(d[,190:195], na.rm=TRUE)
#Correlations
with(d, cor(cbind(fbtalk.freq, fbtalk.size,
fbtalk.dis, fbtalk.agr),
use="complete.obs", method="pearson"))
#Section G: Political Antecedents
#Efficacy
d <- d %>% mutate(across(
.cols = all_of(c(196:197)),
~(recode(., "Strongly disagree" = 1, "Somewhat disagree" = 2, "Neither agree nor disagree" = 3, "Somewhat agree" = 4, "Strongly agree" = 5, .default = NA_real_)),
.names = "{col}"))
d <- d %>% mutate(across(
.cols = all_of(c(198:199)),
~(recode(., "Strongly disagree" = 5, "Somewhat disagree" = 4, "Neither agree nor disagree" = 3, "Somewhat agree" = 2, "Strongly agree" = 1, .default = NA_real_)),
.names = "{col}"))
ltm::cronbach.alpha(d[,196:197], na.rm=TRUE) #alpha = .773
ltm::cronbach.alpha(d[,198:199], na.rm=TRUE) #alpha = .747
d$eff.i = rowMeans(d[,196:197], na.rm=TRUE)
d$eff.e = rowMeans(d[,198:199], na.rm=TRUE)
#Interest
d <- d %>% mutate(across(
.cols = all_of(c(200:202)),
~(recode(., "Not at all interested" = 1, "A little bit interested" = 2, "Somewhat interested" = 3, "Interested" = 4, "Very interested" = 5, .default = NA_real_)),
.names = "{col}"))
ltm::cronbach.alpha(d[,200:202], na.rm=TRUE) #alpha = .847
d$int = rowMeans(d[,200:202], na.rm=TRUE)
#Ideology
d$ideo = d$G54_N
#Party ID
d$pid <- NA
d$pid = ifelse(d$G55 == "Democrat" & d$G56a == "Strong", -3, d$pid)
d$pid = ifelse(d$G55 == "Democrat" & d$G56a == "Not that strong", -2, d$pid)
d$pid = ifelse(d$G55 == "Independent" & d$G56b == "Closer to the Democratic Party", -1, d$pid)
d$pid = ifelse(d$G55 == "Other party (please specify:)" & d$G56b == "Closer to the Democratic Party", -1, d$pid)
d$pid = ifelse(d$G55 == "Independent" & d$G56b == "Neither", 0, d$pid)
d$pid = ifelse(d$G55 == "Other party (please specify:)" & d$G56b == "Neither", 0, d$pid)
d$pid = ifelse(d$G55 == "Independent" & d$G56b == "Closer to the Republican Party", 1, d$pid)
d$pid = ifelse(d$G55 == "Other party (please specify:)" & d$G56b == "Closer to the Republican Party", 1, d$pid)
d$pid = ifelse(d$G55 == "Republican" & d$G56a == "Not that strong", 2, d$pid)
d$pid = ifelse(d$G55 == "Republican" & d$G56a == "Strong", 3, d$pid)
#Knowledge
d$know1[d$G57 == "Kamala Harris"] <- 1
d$know1[d$G57 != "Kamala Harris"] <- 0
d$know2[d$G58 == "Democrat"] <- 1
d$know2[d$G58 != "Democrat"] <- 0
d$know3[d$G59 == "Judicial branch"] <- 1
d$know3[d$G59 != "Judicial branch"] <- 0
d$know = with(d, rowSums(cbind(know1, know2, know3), na.rm=TRUE))
save(d, file="socnews.Rdata")
names(d)
x <- d %>% select(ng1.agree, ng2.agree, ng3.agree, ng1.sim, ng2.sim, ng3.sim)
rm(x)
x <- d %>% select(name1, name2, name3,
ng1.agree, ng2.agree, ng3.agree,
ng1.sim, ng2.sim, ng3.sim)
table(d$ng1.agree)
d$ng1.agree[name1 == 0] <- NA
d$ng1.agree[d$name1 == 0] <- NA
table(d$ng1.agree)
d$ng1.sim[d$name1 == 0] <- NA
d$ng2.sim[d$name2 == 0] <- NA
d$ng3.sim[d$name3 == 0] <- NA
table(d$ng1.sim)
x <- d %>% select(ng1.agree, ng2.agree, ng3.agree,
ng1.sim, ng2.sim, ng3.sim)
row.names(x)
x$case = row.names(x)
names(x)
long <- x %>% gather(key, value, na.rm=F, convert=F)
head(long)
head(x)
rm(x)
rm(long)
table(d$ng1.agree)
d$case = row.names(d)
head(as.data.frame(cbind(d$case, d$ng1.agree)))
as.data.frame(cbind(d$case, d$ng1.agree))
#Filter
d$ng1.agree[d$name1 == 0] <- NA
d$ng2.agree[d$name2 == 0] <- NA
d$ng3.agree[d$name3 == 0] <- NA
d$ng1.sim[d$name1 == 0] <- NA
d$ng2.sim[d$name2 == 0] <- NA
d$ng3.sim[d$name3 == 0] <- NA
#Select variables
x <- d %>% select(case,
ng1.agree, ng2.agree, ng3.agree,
ng1.sim, ng2.sim, ng3.sim)
table(d$names)
x <- d[d$names > 0]
d$names
x <- d[names > 0]
x <- subset(d, names > 0)
rm(x)
#Row name variable
d$case = row.names(d)
#Filter
d$ng1.agree[d$name1 == 0] <- NA
d$ng2.agree[d$name2 == 0] <- NA
d$ng3.agree[d$name3 == 0] <- NA
d$ng1.sim[d$name1 == 0] <- NA
d$ng2.sim[d$name2 == 0] <- NA
d$ng3.sim[d$name3 == 0] <- NA
#Filter again and select variables
x <- subset(d, names > 0)
x <- d %>% select(case,
ng1.agree, ng2.agree, ng3.agree,
ng1.sim, ng2.sim, ng3.sim)
rm(x)
#Row name variable
d$case = row.names(d)
#Filter
d$ng1.agree[d$name1 == 0] <- NA
d$ng2.agree[d$name2 == 0] <- NA
d$ng3.agree[d$name3 == 0] <- NA
d$ng1.sim[d$name1 == 0] <- NA
d$ng2.sim[d$name2 == 0] <- NA
d$ng3.sim[d$name3 == 0] <- NA
#Filter again and select variables
x <- subset(d, names > 0)
x <- x %>% select(case,
ng1.agree, ng2.agree, ng3.agree,
ng1.sim, ng2.sim, ng3.sim)
long <- x %>% gather(key, value, na.rm=F, convert=F)
head(long)
x <- x %>% select(ng1.agree, ng2.agree, ng3.agree,
ng1.sim, ng2.sim, ng3.sim)
long <- x %>% gather(key, value, na.rm=F, convert=F)
head(long)
rm(long)
head(x)
x %>%
pivot_longer(!row.names, names_to = "ng", values_to = "agree")
x %>%
pivot_longer(!row.names(x), names_to = "ng", values_to = "agree")
x <- x %>% select(case,
ng1.agree, ng2.agree, ng3.agree,
ng1.sim, ng2.sim, ng3.sim)
rm(x)
#Row name variable
d$case = row.names(d)
#Filter
d$ng1.agree[d$name1 == 0] <- NA
d$ng2.agree[d$name2 == 0] <- NA
d$ng3.agree[d$name3 == 0] <- NA
d$ng1.sim[d$name1 == 0] <- NA
d$ng2.sim[d$name2 == 0] <- NA
d$ng3.sim[d$name3 == 0] <- NA
#Filter again and select variables
x <- subset(d, names > 0)
x <- x %>% select(case,
ng1.agree, ng2.agree, ng3.agree,
ng1.sim, ng2.sim, ng3.sim)
x %>%
pivot_longer(!case, names_to = "ng", values_to = "agree")
x %>%
pivot_longer(
everything(),
names_to = c(".value", "set"),
names_pattern = "(.)(.)"
)
x <- x %>% select(ng1.agree, ng2.agree, ng3.agree,
ng1.sim, ng2.sim, ng3.sim)
x %>%
pivot_longer(
everything(),
names_to = c(".value", "set"),
names_pattern = "(.)(.)"
)
x <- x %>% select(ng1.agree, ng2.agree, ng3.agree,
ng1.sim, ng2.sim, ng3.sim)
print(x)
x <- x %>% select(case,
ng1.agree, ng2.agree, ng3.agree,
ng1.sim, ng2.sim, ng3.sim)
rm(x)
#Row name variable
d$case = row.names(d)
#Filter
d$ng1.agree[d$name1 == 0] <- NA
d$ng2.agree[d$name2 == 0] <- NA
d$ng3.agree[d$name3 == 0] <- NA
d$ng1.sim[d$name1 == 0] <- NA
d$ng2.sim[d$name2 == 0] <- NA
d$ng3.sim[d$name3 == 0] <- NA
#Filter again and select variables
x <- subset(d, names > 0)
x <- x %>% select(case,
ng1.agree, ng2.agree, ng3.agree,
ng1.sim, ng2.sim, ng3.sim)
x %>%
pivot_longer(
everything(),
names_to = c(".value", "case"),
names_pattern = "(.)(.)"
)
x1 <- x %>% select(case,
ng1.agree, ng2.agree, ng3.agree)
long1 <- gather(x1, ng, agree, ng1.agree:ng3.agree, factor_key=TRUE)
head(long1)
x2 <- x %>% select(case,
ng1.sim, ng2.sim, ng3.sim)
long2 <- gather(x2, ng, sim, ng1.sim:ng3.sim, factor_key=TRUE)
as.data.frame(cbind(long1, long2))
long <- as.data.frame(cbind(long1, long2))
head(long)
with(long(cor(agree, sim)))
with(long, (cor(agree, sim), use="complete.obs"))
with(long, (cor(agree, sim, use="complete.obs"))
)
with(d, cor(ng.agree, ng.sim, use="complete.obs"))
x1 <- x1 %>% rename(ng1 = ng1.agree, ng2 = ng2.agree, ng3 = ng3.agree)
head(x1)
rm(long, long1, long2, x, x1)
#Filter
d$ng1.agree[d$name1 == 0] <- NA
d$ng2.agree[d$name2 == 0] <- NA
d$ng3.agree[d$name3 == 0] <- NA
d$ng1.sim[d$name1 == 0] <- NA
d$ng2.sim[d$name2 == 0] <- NA
d$ng3.sim[d$name3 == 0] <- NA
x <- subset(d, names > 0)
x.agree <- x %>% select(ng1.agree, ng2.agree, ng3.agree)
x.agree <- x.agree %>% rename(ng1 = ng1.agree, ng2 = ng2.agree, ng3 = ng3.agree)
x.sim <- x %>% select(ng1.sim, ng2.sim, ng3.sim)
x.sim <- x.sim %>% rename(ng1 = ng1.sim, ng2 = ng2.sim, ng3 = ng3.sim)
long.agree <- gather(x.agree, ng, agree, ng1:ng3, factor_key=TRUE)
long.sim <- gather(x.sim, ng, sim, ng1:ng3, factor_key=TRUE)
long <- merge(x.agree, x.sim, by="ng")
head(long.agree)
head(long.sim)
long <- merge(x.agree, x.sim)
head(long)
long <- merge(long.agree, long.sim, by="ng")
head(long)
with(long, (cor(agree, sim, use="complete.obs")))
long
table(d$rid)
d$ID = row.names(d)
head(d$ID)
rm(long, long.agree, long.sim, x, x.agree)
rm(x2, x.sim)
#Filter
d$ng1.agree[d$name1 == 0] <- NA
d$ng2.agree[d$name2 == 0] <- NA
d$ng3.agree[d$name3 == 0] <- NA
d$ng1.sim[d$name1 == 0] <- NA
d$ng2.sim[d$name2 == 0] <- NA
d$ng3.sim[d$name3 == 0] <- NA
#Filter again and select variables
x <- subset(d, names > 0)
x.agree <- x %>% select(ID, ng1.agree, ng2.agree, ng3.agree)
x.agree <- x.agree %>% rename(ng1 = ng1.agree, ng2 = ng2.agree, ng3 = ng3.agree)
x.sim <- x %>% select(ID, ng1.sim, ng2.sim, ng3.sim)
x.sim <- x.sim %>% rename(ng1 = ng1.sim, ng2 = ng2.sim, ng3 = ng3.sim)
long.agree <- gather(x.agree, ng, agree, ng1:ng3, factor_key=TRUE)
head(long.agree)
long.sim <- gather(x.sim, ng, sim, ng1:ng3, factor_key=TRUE)
long <- merge(long.agree, long.sim, by="ID")
head(long)
rm(long)
long <- merge(long.agree, long.sim, by=c("ID", "ng")
)
head(long)
with(long, (cor(agree, sim, use="complete.obs")))
library(lme4)
library(lmerTest)
iccMixed(
dv = "sim",
id = "ID",
data = long)
m1 = lmer(sim ~ agree + (1 | ID), data=long)
summary(m1)
summary(m1, cor=FALSE)
options(scipen=999)
summary(m1, cor=FALSE)
icc(m1)
libary(sjstats)
library(sjstats)
icc(m1)
m1 = lmer(sim ~ agree + (1 + agree | ID), data=long)
m1 = lmer(sim ~ agree + (1 + agree | ID), data=long,
control=lmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
summary(m1, cor=FALSE)
icc(m1)
rm(long, long.agree, long.sim, m1, x)
rm(x.agree, x.sim)
#Filter again and select variables
x <- subset(d, names > 0)
x.agree <- x %>% select(ID, ng1.agree, ng2.agree, ng3.agree)
x.agree <- x.agree %>% rename(ng1 = ng1.agree, ng2 = ng2.agree, ng3 = ng3.agree)
x.sim <- x %>% select(ID, ng1.sim, ng2.sim, ng3.sim)
x.sim <- x.sim %>% rename(ng1 = ng1.sim, ng2 = ng2.sim, ng3 = ng3.sim)
x.lik <- x %>% select(ID, ng1.lik, ng2.lik, ng3.lik)
x.lik <- x.lik %>% rename(ng1 = ng1.lik, ng2 = ng2.lik, ng3 = ng3.lik)
x.clo <- x %>% select(ID, ng1.clo, ng2.clo, ng3.clo)
x.clo <- x.clo %>% rename(ng1 = ng1.clo, ng2 = ng2.clo, ng3 = ng3.clo)
long.agree <- gather(x.agree, ng, agree, ng1:ng3, factor_key=TRUE)
long.sim <- gather(x.sim, ng, sim, ng1:ng3, factor_key=TRUE)
long.lik <- gather(x.lik, ng, sim, ng1:ng3, factor_key=TRUE)
long.clo <- gather(x.clo, ng, sim, ng1:ng3, factor_key=TRUE)
long.t1 <- merge(long.agree, long.sim, by=c("ID", "ng"))
head(long.t1)
long.t2 <- merge(long.t1, long.lik, by=c("ID", "ng"))
head(long.t2)
rm(long.agree, long.sim, long.lik, long.clo)
long.agree <- gather(x.agree, ng, agree, ng1:ng3, factor_key=TRUE)
long.sim <- gather(x.sim, ng, sim, ng1:ng3, factor_key=TRUE)
long.lik <- gather(x.lik, ng, lik, ng1:ng3, factor_key=TRUE)
long.clo <- gather(x.clo, ng, clo, ng1:ng3, factor_key=TRUE)
long.t1 <- merge(long.agree, long.sim, by=c("ID", "ng"))
long.t2 <- merge(long.t1, long.lik, by=c("ID", "ng"))
long <- merge(long.t2, long.clo, by=c("ID", "ng"))
head(long)
rm(long.agree, long.clo, long.sim, long.lik)
rm(long.t1, long.t2)
rm(x.agree, x.clo, x.lik, x.sim)
rm(x, x.agree, x.clo, x.lik, x.sim)
with(long, (cor(agree, sim, use="complete.obs")))
library(lme4)
library(lmerTest)
library(sjstats)
m = lmer(cbind(sim, lik, clo) ~ agree + (1 + agree | ID), data=long,
control=lmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
m2 = lmer(lik ~ agree + (1 + agree | ID), data=long,
control=lmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
m3 = lmer(clo ~ agree + (1 + agree | ID), data=long,
control=lmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
m1 = lmer(sim ~ agree + (1 + agree | ID), data=long,
control=lmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
icc(m1)
icc(m2)
icc(m3)
summary(m1, cor=FALSE)
summary(m2, cor=FALSE)
summary(m3, cor=FALSE)
